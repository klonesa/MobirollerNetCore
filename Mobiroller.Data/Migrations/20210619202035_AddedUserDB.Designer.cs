// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mobiroller.Data.Contexts;

namespace Mobiroller.Data.Migrations
{
    [DbContext(typeof(MobirollerContext))]
    [Migration("20210619202035_AddedUserDB")]
    partial class AddedUserDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mobiroller.Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Mobiroller.Entities.Concrete.EventIt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Categoria");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Evento");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Orario");

                    b.HasKey("Id");

                    b.ToTable("EventsIt");
                });

            modelBuilder.Entity("Mobiroller.Entities.Concrete.EventTr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Kategori");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Olay");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dc_Zaman");

                    b.HasKey("Id");

                    b.ToTable("EventsTr");
                });
#pragma warning restore 612, 618
        }
    }
}
